<?php

namespace Module\{%uModuleName%}\Repository;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Module\{%uModuleName%}\Entity\{%entityName%};
use Doctrine\Persistence\ManagerRegistry;
use App\Repository\GetItemForDeleteInterface;
use App\Repository\GetItemForPutInterface;
use App\Repository\GetItemInterface;
use App\Repository\PaginatorInterface;
use App\Util\Paginator;

/**
 * Class {%repositoryName%}
 * @package Module\{%uModuleName%}\Repository
 *
 * @method {%entityName%}|null find($id, $lockMode = null, $lockVersion = null)
 * @method {%entityName%}|null findOneBy(array $criteria, array $orderBy = null)
 * @method {%entityName%}[]    findAll()
 * @method {%entityName%}[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class {%repositoryName%} extends
    ServiceEntityRepository
    implements PaginatorInterface, GetItemInterface, GetItemForDeleteInterface, GetItemForPutInterface
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, {%entityName%}::class);
    }

    /**
     * @throws \Exception
     */
    public function getPaginator(int $page, array $data = []): Paginator
    {
        $qb = $this->createQueryBuilder('img');

        return (new Paginator($qb, Paginator::PAGE_SIZE))->paginate($page);
    }

    public function getItem(int $id): ?object
    {
        return $this->findOneBy(['id' => $id]);
    }

    public function getItemForDelete(int $id): ?object
    {
        return $this->findOneBy(['id' => $id]);
    }

    public function getItemForPut(int $id): ?object
    {
        return $this->findOneBy(['id' => $id]);
    }
}